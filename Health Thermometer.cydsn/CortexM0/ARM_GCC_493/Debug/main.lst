ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.putdata,"ax",%progbits
  18              		.align	2
  19              		.global	putdata
  20              		.code	16
  21              		.thumb_func
  22              		.type	putdata, %function
  23              	putdata:
  24              	.LFB35:
  25              		.file 1 ".\\main.c"
   1:.\main.c      **** /****************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** * This file implements the system functions.
   8:.\main.c      **** *
   9:.\main.c      **** * Note:
  10:.\main.c      **** * 
  11:.\main.c      **** * Owner:
  12:.\main.c      **** * PMAD
  13:.\main.c      **** *
  14:.\main.c      **** ******************************************************************************
  15:.\main.c      **** * Copyright (2014), Cypress Semiconductor Corporation.
  16:.\main.c      **** ******************************************************************************
  17:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:.\main.c      **** * protected by and subject to worldwide patent protection (United States and
  19:.\main.c      **** * foreign), United States copyright laws and international treaty provisions.
  20:.\main.c      **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:.\main.c      **** * license to copy, use, modify, create derivative works of, and compile the
  22:.\main.c      **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:.\main.c      **** * custom software in support of licensee product to be used only in conjunction
  24:.\main.c      **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:.\main.c      **** * Any reproduction, modification, translation, compilation, or representation of
  26:.\main.c      **** * this software except as specified above is prohibited without the express
  27:.\main.c      **** * written permission of Cypress.
  28:.\main.c      **** *
  29:.\main.c      **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  30:.\main.c      **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  31:.\main.c      **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:.\main.c      **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 2


  33:.\main.c      **** * materials described herein. Cypress does not assume any liability arising out
  34:.\main.c      **** * of the application or use of any product or circuit described herein. Cypress
  35:.\main.c      **** * does not authorize its products for use as critical components in life-support
  36:.\main.c      **** * systems where a malfunction or failure may reasonably be expected to result in
  37:.\main.c      **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:.\main.c      **** * support systems application implies that the manufacturer assumes all risk of
  39:.\main.c      **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:.\main.c      **** * limited by and subject to the applicable Cypress software license agreement.
  41:.\main.c      **** *****************************************************************************/
  42:.\main.c      **** 
  43:.\main.c      **** 
  44:.\main.c      **** /*****************************************************************************
  45:.\main.c      **** * Included headers
  46:.\main.c      **** *****************************************************************************/
  47:.\main.c      **** #include <project.h>
  48:.\main.c      **** #include "CommonFunctions.h"
  49:.\main.c      **** #include "Temperature.h"
  50:.\main.c      **** #include "printf.h"
  51:.\main.c      **** //#include "BLE_HTSS.h"
  52:.\main.c      **** void putdata (void* p, char c)
  53:.\main.c      **** {
  26              		.loc 1 53 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
  37 0008 0A1C     		mov	r2, r1
  38 000a FB1C     		add	r3, r7, #3
  39 000c 1A70     		strb	r2, [r3]
  54:.\main.c      **** 
  55:.\main.c      **** UART_UartPutChar(c);
  40              		.loc 1 55 0
  41 000e FB1C     		add	r3, r7, #3
  42 0010 1B78     		ldrb	r3, [r3]
  43 0012 181C     		mov	r0, r3
  44 0014 FFF7FEFF 		bl	UART_SpiUartWriteTxData
  56:.\main.c      **** 
  57:.\main.c      **** }
  45              		.loc 1 57 0
  46 0018 BD46     		mov	sp, r7
  47 001a 02B0     		add	sp, sp, #8
  48              		@ sp needed
  49 001c 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE35:
  52              		.size	putdata, .-putdata
  53 001e C046     		.section	.rodata
  54              		.align	2
  55              	.LC1:
  56 0000 0D0A2A2A 		.ascii	"\015\012*******************************************"
  56      2A2A2A2A 
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 3


  56      2A2A2A2A 
  56      2A2A2A2A 
  56      2A2A2A2A 
  57 002d 2A2A2A2A 		.ascii	"*************************************\015\012\000"
  57      2A2A2A2A 
  57      2A2A2A2A 
  57      2A2A2A2A 
  57      2A2A2A2A 
  58 0055 000000   		.align	2
  59              	.LC3:
  60 0058 594F4E4F 		.ascii	"YONO Internal Testing\015\012\000"
  60      20496E74 
  60      65726E61 
  60      6C205465 
  60      7374696E 
  61              		.align	2
  62              	.LC5:
  63 0070 5343425F 		.ascii	"SCB_UART Successful\015\012\000"
  63      55415254 
  63      20537563 
  63      63657373 
  63      66756C0D 
  64 0086 0000     		.align	2
  65              	.LC7:
  66 0088 53746172 		.ascii	"Starting to Transmit Temperature\015\012\000"
  66      74696E67 
  66      20746F20 
  66      5472616E 
  66      736D6974 
  67 00ab 00       		.align	2
  68              	.LC9:
  69 00ac 0D0A00   		.ascii	"\015\012\000"
  70 00af 00       		.align	2
  71              	.LC11:
  72 00b0 54656D70 		.ascii	"Temperature=\000"
  72      65726174 
  72      7572653D 
  72      00
  73 00bd 000000   		.align	2
  74              	.LC13:
  75 00c0 256400   		.ascii	"%d\000"
  76 00c3 00       		.align	2
  77              	.LC15:
  78 00c4 4300     		.ascii	"C\000"
  79 00c6 0000     		.section	.text.main,"ax",%progbits
  80              		.align	2
  81              		.global	main
  82              		.code	16
  83              		.thumb_func
  84              		.type	main, %function
  85              	main:
  86              	.LFB36:
  58:.\main.c      **** /*****************************************************************************
  59:.\main.c      **** * Function Name: main()
  60:.\main.c      **** ******************************************************************************
  61:.\main.c      **** * Summary:
  62:.\main.c      **** * Central function which controls the application flow
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 4


  63:.\main.c      **** *
  64:.\main.c      **** * Parameters:
  65:.\main.c      **** * None
  66:.\main.c      **** *
  67:.\main.c      **** * Return:
  68:.\main.c      **** * None
  69:.\main.c      **** *
  70:.\main.c      **** * Theory:
  71:.\main.c      **** * Central function which is entered on power up. This function controls
  72:.\main.c      **** * the complete application which includes BLE processing, temperature 
  73:.\main.c      **** * measurement and power mode transitions.
  74:.\main.c      **** *
  75:.\main.c      **** * Side Effects:
  76:.\main.c      **** * None
  77:.\main.c      **** *
  78:.\main.c      **** * Note:
  79:.\main.c      **** *
  80:.\main.c      **** *****************************************************************************/
  81:.\main.c      **** int main()
  82:.\main.c      **** {
  87              		.loc 1 82 0
  88              		.cfi_startproc
  89 0000 80B5     		push	{r7, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 8AB0     		sub	sp, sp, #40
  94              		.cfi_def_cfa_offset 48
  95 0004 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
  83:.\main.c      ****     /* Powerstate indicators of BLESS */
  84:.\main.c      ****  //   CYBLE_LP_MODE_T lpMode = CYBLE_BLESS_DEEPSLEEP;
  85:.\main.c      ****    // CYBLE_BLESS_STATE_T blessState = CYBLE_BLESS_STATE_DEEPSLEEP;
  86:.\main.c      ****     
  87:.\main.c      ****     /* Local variable used to store temperature information */
  88:.\main.c      ****     int32 temperature;
  89:.\main.c      ****     int temp;
  90:.\main.c      ****     char Out_String[30];
  91:.\main.c      ****     /* Enable global interrupt, required for BLESS operation */
  92:.\main.c      ****    // CyGlobalIntEnable; 
  93:.\main.c      ****     
  94:.\main.c      ****     /* Initialize the complete system */
  95:.\main.c      ****     InitializeSystem();
  97              		.loc 1 95 0
  98 0006 FFF7FEFF 		bl	InitializeSystem
  96:.\main.c      ****     
  97:.\main.c      ****     
  98:.\main.c      ****     init_printf(NULL,putdata);
  99              		.loc 1 98 0
 100 000a 1D4B     		ldr	r3, .L4
 101 000c 0020     		mov	r0, #0
 102 000e 191C     		mov	r1, r3
 103 0010 FFF7FEFF 		bl	init_printf
  99:.\main.c      ****     UART_UartPutString("\r\n***********************************************************************
 104              		.loc 1 99 0
 105 0014 1B4B     		ldr	r3, .L4+4
 106 0016 181C     		mov	r0, r3
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 5


 107 0018 FFF7FEFF 		bl	UART_UartPutString
 100:.\main.c      ****     UART_UartPutString("YONO Internal Testing\r\n");
 108              		.loc 1 100 0
 109 001c 1A4B     		ldr	r3, .L4+8
 110 001e 181C     		mov	r0, r3
 111 0020 FFF7FEFF 		bl	UART_UartPutString
 101:.\main.c      ****     UART_UartPutString("SCB_UART Successful\r\n");
 112              		.loc 1 101 0
 113 0024 194B     		ldr	r3, .L4+12
 114 0026 181C     		mov	r0, r3
 115 0028 FFF7FEFF 		bl	UART_UartPutString
 102:.\main.c      ****     UART_UartPutString("Starting to Transmit Temperature\r\n");
 116              		.loc 1 102 0
 117 002c 184B     		ldr	r3, .L4+16
 118 002e 181C     		mov	r0, r3
 119 0030 FFF7FEFF 		bl	UART_UartPutString
 103:.\main.c      ****     UART_UartPutString("\r\n");
 120              		.loc 1 103 0
 121 0034 174B     		ldr	r3, .L4+20
 122 0036 181C     		mov	r0, r3
 123 0038 FFF7FEFF 		bl	UART_UartPutString
 124              	.L3:
 104:.\main.c      ****     /* Infinite loop */
 105:.\main.c      ****     for(;;)
 106:.\main.c      ****     {
 107:.\main.c      ****         /* Process all pending BLE events in the stack */
 108:.\main.c      ****   //      CyBle_ProcessEvents();
 109:.\main.c      ****         
 110:.\main.c      ****         /***********************************************************************
 111:.\main.c      ****         * Wait for connection established with Central device
 112:.\main.c      ****         ***********************************************************************/
 113:.\main.c      ****   //      if(CyBle_GetState() == CYBLE_STATE_CONNECTED)
 114:.\main.c      ****    //     {
 115:.\main.c      ****             /* Process all pending BLE events in the stack */
 116:.\main.c      ****         //    CyBle_ProcessEvents();
 117:.\main.c      ****             /* Periodically measure temperature and send results to the Client */
 118:.\main.c      ****       //      if(SystemFlag & WAKEUP_SOURCE_WDT)
 119:.\main.c      ****       //      {
 120:.\main.c      ****                 /* Clear WDT wakeup source flag */
 121:.\main.c      ****     //            SystemFlag &= ~WAKEUP_SOURCE_WDT;
 122:.\main.c      ****                 /* Wakeup the system from deep sleep */
 123:.\main.c      ****    //             WakeupFromDeepSleep();
 124:.\main.c      ****                 /* Measure temperature */
 125:.\main.c      **** 
 126:.\main.c      ****         
 127:.\main.c      **** temperature = ProcessTemperature();
 125              		.loc 1 127 0 discriminator 1
 126 003c FFF7FEFF 		bl	ProcessTemperature
 127 0040 031C     		mov	r3, r0
 128 0042 7B62     		str	r3, [r7, #36]
 128:.\main.c      **** temp=(int)temperature;
 129              		.loc 1 128 0 discriminator 1
 130 0044 7B6A     		ldr	r3, [r7, #36]
 131 0046 3B62     		str	r3, [r7, #32]
 129:.\main.c      **** UART_UartPutString("Temperature=");
 132              		.loc 1 129 0 discriminator 1
 133 0048 134B     		ldr	r3, .L4+24
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 6


 134 004a 181C     		mov	r0, r3
 135 004c FFF7FEFF 		bl	UART_UartPutString
 130:.\main.c      **** printf("%d",temperature);
 136              		.loc 1 130 0 discriminator 1
 137 0050 124A     		ldr	r2, .L4+28
 138 0052 7B6A     		ldr	r3, [r7, #36]
 139 0054 101C     		mov	r0, r2
 140 0056 191C     		mov	r1, r3
 141 0058 FFF7FEFF 		bl	tfp_printf
 131:.\main.c      **** UART_UartPutString(Out_String);
 142              		.loc 1 131 0 discriminator 1
 143 005c 3B1C     		mov	r3, r7
 144 005e 181C     		mov	r0, r3
 145 0060 FFF7FEFF 		bl	UART_UartPutString
 132:.\main.c      **** UART_UartPutString("C");
 146              		.loc 1 132 0 discriminator 1
 147 0064 0E4B     		ldr	r3, .L4+32
 148 0066 181C     		mov	r0, r3
 149 0068 FFF7FEFF 		bl	UART_UartPutString
 133:.\main.c      **** UART_UartPutString("\r\n");
 150              		.loc 1 133 0 discriminator 1
 151 006c 094B     		ldr	r3, .L4+20
 152 006e 181C     		mov	r0, r3
 153 0070 FFF7FEFF 		bl	UART_UartPutString
 134:.\main.c      **** CyDelay(2000);
 154              		.loc 1 134 0 discriminator 1
 155 0074 FA23     		mov	r3, #250
 156 0076 DB00     		lsl	r3, r3, #3
 157 0078 181C     		mov	r0, r3
 158 007a FFF7FEFF 		bl	CyDelay
 135:.\main.c      **** 
 136:.\main.c      **** 
 137:.\main.c      **** 
 138:.\main.c      ****                 /* Send temperature information over BLE */
 139:.\main.c      ****    //             ProcessBLE(temperature);
 140:.\main.c      ****             //}
 141:.\main.c      ****        // }
 142:.\main.c      ****         
 143:.\main.c      ****         /* If BLE is successfully initialized, then execute the low power routine */
 144:.\main.c      ****    //     if(CyBle_GetState() != CYBLE_STATE_INITIALIZING)
 145:.\main.c      ****     //    {
 146:.\main.c      ****             /* Disable all hardware blocks */
 147:.\main.c      ****      //       PrepareForDeepSleep();
 148:.\main.c      ****             /* Enter Deep Sleep mode between connection intervals */
 149:.\main.c      ****     //        lpMode = CyBle_EnterLPM(CYBLE_BLESS_DEEPSLEEP);
 150:.\main.c      ****             
 151:.\main.c      ****             /* Disable global interrupts to avoid race condition */
 152:.\main.c      ****        //     CyGlobalIntDisable;
 153:.\main.c      ****      //       blessState = CyBle_GetBleSsState();
 154:.\main.c      **** 
 155:.\main.c      ****             /* Try putting system in DeepSleep mode if BLESS succesfully entered Deep Sleep mode*/
 156:.\main.c      ****     //        if(lpMode == CYBLE_BLESS_DEEPSLEEP) 
 157:.\main.c      ****     //        {   
 158:.\main.c      ****                 /* If BLESS is in Deep Sleep or is in the process of waking up from Deep Sleep,
 159:.\main.c      ****                  * put system in Deep Sleep mode */
 160:.\main.c      ****     //            if(blessState == CYBLE_BLESS_STATE_ECO_ON || blessState == CYBLE_BLESS_STATE_DEEP
 161:.\main.c      ****      //           {
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 7


 162:.\main.c      ****      //              CySysPmDeepSleep();
 163:.\main.c      ****      ///           }
 164:.\main.c      ****      //      }
 165:.\main.c      ****             /* If BLESS is in Active state */
 166:.\main.c      ****       //      else
 167:.\main.c      ****       //      {
 168:.\main.c      ****                 /* If BLESS Tx/Rx Event is not complete, reduce IMO and put CPU to Sleep */
 169:.\main.c      ****      //           if(blessState != CYBLE_BLESS_STATE_EVENT_CLOSE)
 170:.\main.c      ****      //           {
 171:.\main.c      ****       //              CySysClkWriteImoFreq(IMO_FREQUENCY_3MHZ);
 172:.\main.c      ****         //         CySysPmSleep();
 173:.\main.c      ****         //            CySysClkWriteImoFreq(IMO_FREQUENCY_12MHZ);
 174:.\main.c      ****          //       }
 175:.\main.c      ****           //  }
 176:.\main.c      ****             /* Enable interrupts for normal operation */
 177:.\main.c      ****         //    CyGlobalIntEnable;
 178:.\main.c      ****        // }
 179:.\main.c      ****         
 180:.\main.c      ****         /* If Hibernate is enabled then put system in hibernate state */
 181:.\main.c      ****     //    if(SystemFlag & ENABLE_HIBERNATE)
 182:.\main.c      ****     //    {
 183:.\main.c      ****             /* Enable ISR for the pin to wakeup the device from hibernate */
 184:.\main.c      ****     //  Wakeup_ISR_Start();
 185:.\main.c      ****             
 186:.\main.c      ****             /* Put sytem to hibernate */
 187:.\main.c      ****      //       CySysPmHibernate();
 188:.\main.c      ****         //}
 189:.\main.c      ****    // }
 190:.\main.c      **** }
 159              		.loc 1 190 0 discriminator 1
 160 007e DDE7     		b	.L3
 161              	.L5:
 162              		.align	2
 163              	.L4:
 164 0080 00000000 		.word	putdata
 165 0084 00000000 		.word	.LC1
 166 0088 58000000 		.word	.LC3
 167 008c 70000000 		.word	.LC5
 168 0090 88000000 		.word	.LC7
 169 0094 AC000000 		.word	.LC9
 170 0098 B0000000 		.word	.LC11
 171 009c C0000000 		.word	.LC13
 172 00a0 C4000000 		.word	.LC15
 173              		.cfi_endproc
 174              	.LFE36:
 175              		.size	main, .-main
 176              		.text
 177              	.Letext0:
 178              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 179              		.section	.debug_info,"",%progbits
 180              	.Ldebug_info0:
 181 0000 1A010000 		.4byte	0x11a
 182 0004 0400     		.2byte	0x4
 183 0006 00000000 		.4byte	.Ldebug_abbrev0
 184 000a 04       		.byte	0x4
 185 000b 01       		.uleb128 0x1
 186 000c A4000000 		.4byte	.LASF20
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 8


 187 0010 01       		.byte	0x1
 188 0011 82010000 		.4byte	.LASF21
 189 0015 38000000 		.4byte	.LASF22
 190 0019 00000000 		.4byte	.Ldebug_ranges0+0
 191 001d 00000000 		.4byte	0
 192 0021 00000000 		.4byte	.Ldebug_line0
 193 0025 02       		.uleb128 0x2
 194 0026 01       		.byte	0x1
 195 0027 06       		.byte	0x6
 196 0028 70010000 		.4byte	.LASF0
 197 002c 02       		.uleb128 0x2
 198 002d 01       		.byte	0x1
 199 002e 08       		.byte	0x8
 200 002f 2A000000 		.4byte	.LASF1
 201 0033 02       		.uleb128 0x2
 202 0034 02       		.byte	0x2
 203 0035 05       		.byte	0x5
 204 0036 4C010000 		.4byte	.LASF2
 205 003a 02       		.uleb128 0x2
 206 003b 02       		.byte	0x2
 207 003c 07       		.byte	0x7
 208 003d 5D010000 		.4byte	.LASF3
 209 0041 02       		.uleb128 0x2
 210 0042 04       		.byte	0x4
 211 0043 05       		.byte	0x5
 212 0044 43010000 		.4byte	.LASF4
 213 0048 02       		.uleb128 0x2
 214 0049 04       		.byte	0x4
 215 004a 07       		.byte	0x7
 216 004b 7B000000 		.4byte	.LASF5
 217 004f 02       		.uleb128 0x2
 218 0050 08       		.byte	0x8
 219 0051 05       		.byte	0x5
 220 0052 00000000 		.4byte	.LASF6
 221 0056 02       		.uleb128 0x2
 222 0057 08       		.byte	0x8
 223 0058 07       		.byte	0x7
 224 0059 8D000000 		.4byte	.LASF7
 225 005d 03       		.uleb128 0x3
 226 005e 04       		.byte	0x4
 227 005f 05       		.byte	0x5
 228 0060 696E7400 		.ascii	"int\000"
 229 0064 02       		.uleb128 0x2
 230 0065 04       		.byte	0x4
 231 0066 07       		.byte	0x7
 232 0067 1D000000 		.4byte	.LASF8
 233 006b 04       		.uleb128 0x4
 234 006c 0E000000 		.4byte	.LASF9
 235 0070 02       		.byte	0x2
 236 0071 A3       		.byte	0xa3
 237 0072 48000000 		.4byte	0x48
 238 0076 04       		.uleb128 0x4
 239 0077 9F010000 		.4byte	.LASF10
 240 007b 02       		.byte	0x2
 241 007c A6       		.byte	0xa6
 242 007d 41000000 		.4byte	0x41
 243 0081 02       		.uleb128 0x2
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 9


 244 0082 04       		.byte	0x4
 245 0083 04       		.byte	0x4
 246 0084 7C010000 		.4byte	.LASF11
 247 0088 02       		.uleb128 0x2
 248 0089 08       		.byte	0x8
 249 008a 04       		.byte	0x4
 250 008b 56010000 		.4byte	.LASF12
 251 008f 02       		.uleb128 0x2
 252 0090 01       		.byte	0x1
 253 0091 08       		.byte	0x8
 254 0092 3E010000 		.4byte	.LASF13
 255 0096 02       		.uleb128 0x2
 256 0097 04       		.byte	0x4
 257 0098 07       		.byte	0x7
 258 0099 8B010000 		.4byte	.LASF14
 259 009d 05       		.uleb128 0x5
 260 009e 04       		.byte	0x4
 261 009f 06       		.uleb128 0x6
 262 00a0 15000000 		.4byte	.LASF15
 263 00a4 01       		.byte	0x1
 264 00a5 34       		.byte	0x34
 265 00a6 00000000 		.4byte	.LFB35
 266 00aa 1E000000 		.4byte	.LFE35-.LFB35
 267 00ae 01       		.uleb128 0x1
 268 00af 9C       		.byte	0x9c
 269 00b0 CD000000 		.4byte	0xcd
 270 00b4 07       		.uleb128 0x7
 271 00b5 7000     		.ascii	"p\000"
 272 00b7 01       		.byte	0x1
 273 00b8 34       		.byte	0x34
 274 00b9 9D000000 		.4byte	0x9d
 275 00bd 02       		.uleb128 0x2
 276 00be 91       		.byte	0x91
 277 00bf 74       		.sleb128 -12
 278 00c0 07       		.uleb128 0x7
 279 00c1 6300     		.ascii	"c\000"
 280 00c3 01       		.byte	0x1
 281 00c4 34       		.byte	0x34
 282 00c5 8F000000 		.4byte	0x8f
 283 00c9 02       		.uleb128 0x2
 284 00ca 91       		.byte	0x91
 285 00cb 73       		.sleb128 -13
 286 00cc 00       		.byte	0
 287 00cd 08       		.uleb128 0x8
 288 00ce 76000000 		.4byte	.LASF16
 289 00d2 01       		.byte	0x1
 290 00d3 51       		.byte	0x51
 291 00d4 5D000000 		.4byte	0x5d
 292 00d8 00000000 		.4byte	.LFB36
 293 00dc A4000000 		.4byte	.LFE36-.LFB36
 294 00e0 01       		.uleb128 0x1
 295 00e1 9C       		.byte	0x9c
 296 00e2 11010000 		.4byte	0x111
 297 00e6 09       		.uleb128 0x9
 298 00e7 32010000 		.4byte	.LASF17
 299 00eb 01       		.byte	0x1
 300 00ec 58       		.byte	0x58
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 10


 301 00ed 76000000 		.4byte	0x76
 302 00f1 02       		.uleb128 0x2
 303 00f2 91       		.byte	0x91
 304 00f3 74       		.sleb128 -12
 305 00f4 09       		.uleb128 0x9
 306 00f5 71000000 		.4byte	.LASF18
 307 00f9 01       		.byte	0x1
 308 00fa 59       		.byte	0x59
 309 00fb 5D000000 		.4byte	0x5d
 310 00ff 02       		.uleb128 0x2
 311 0100 91       		.byte	0x91
 312 0101 70       		.sleb128 -16
 313 0102 09       		.uleb128 0x9
 314 0103 94010000 		.4byte	.LASF19
 315 0107 01       		.byte	0x1
 316 0108 5A       		.byte	0x5a
 317 0109 11010000 		.4byte	0x111
 318 010d 02       		.uleb128 0x2
 319 010e 91       		.byte	0x91
 320 010f 50       		.sleb128 -48
 321 0110 00       		.byte	0
 322 0111 0A       		.uleb128 0xa
 323 0112 8F000000 		.4byte	0x8f
 324 0116 0B       		.uleb128 0xb
 325 0117 96000000 		.4byte	0x96
 326 011b 1D       		.byte	0x1d
 327 011c 00       		.byte	0
 328 011d 00       		.byte	0
 329              		.section	.debug_abbrev,"",%progbits
 330              	.Ldebug_abbrev0:
 331 0000 01       		.uleb128 0x1
 332 0001 11       		.uleb128 0x11
 333 0002 01       		.byte	0x1
 334 0003 25       		.uleb128 0x25
 335 0004 0E       		.uleb128 0xe
 336 0005 13       		.uleb128 0x13
 337 0006 0B       		.uleb128 0xb
 338 0007 03       		.uleb128 0x3
 339 0008 0E       		.uleb128 0xe
 340 0009 1B       		.uleb128 0x1b
 341 000a 0E       		.uleb128 0xe
 342 000b 55       		.uleb128 0x55
 343 000c 17       		.uleb128 0x17
 344 000d 11       		.uleb128 0x11
 345 000e 01       		.uleb128 0x1
 346 000f 10       		.uleb128 0x10
 347 0010 17       		.uleb128 0x17
 348 0011 00       		.byte	0
 349 0012 00       		.byte	0
 350 0013 02       		.uleb128 0x2
 351 0014 24       		.uleb128 0x24
 352 0015 00       		.byte	0
 353 0016 0B       		.uleb128 0xb
 354 0017 0B       		.uleb128 0xb
 355 0018 3E       		.uleb128 0x3e
 356 0019 0B       		.uleb128 0xb
 357 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 11


 358 001b 0E       		.uleb128 0xe
 359 001c 00       		.byte	0
 360 001d 00       		.byte	0
 361 001e 03       		.uleb128 0x3
 362 001f 24       		.uleb128 0x24
 363 0020 00       		.byte	0
 364 0021 0B       		.uleb128 0xb
 365 0022 0B       		.uleb128 0xb
 366 0023 3E       		.uleb128 0x3e
 367 0024 0B       		.uleb128 0xb
 368 0025 03       		.uleb128 0x3
 369 0026 08       		.uleb128 0x8
 370 0027 00       		.byte	0
 371 0028 00       		.byte	0
 372 0029 04       		.uleb128 0x4
 373 002a 16       		.uleb128 0x16
 374 002b 00       		.byte	0
 375 002c 03       		.uleb128 0x3
 376 002d 0E       		.uleb128 0xe
 377 002e 3A       		.uleb128 0x3a
 378 002f 0B       		.uleb128 0xb
 379 0030 3B       		.uleb128 0x3b
 380 0031 0B       		.uleb128 0xb
 381 0032 49       		.uleb128 0x49
 382 0033 13       		.uleb128 0x13
 383 0034 00       		.byte	0
 384 0035 00       		.byte	0
 385 0036 05       		.uleb128 0x5
 386 0037 0F       		.uleb128 0xf
 387 0038 00       		.byte	0
 388 0039 0B       		.uleb128 0xb
 389 003a 0B       		.uleb128 0xb
 390 003b 00       		.byte	0
 391 003c 00       		.byte	0
 392 003d 06       		.uleb128 0x6
 393 003e 2E       		.uleb128 0x2e
 394 003f 01       		.byte	0x1
 395 0040 3F       		.uleb128 0x3f
 396 0041 19       		.uleb128 0x19
 397 0042 03       		.uleb128 0x3
 398 0043 0E       		.uleb128 0xe
 399 0044 3A       		.uleb128 0x3a
 400 0045 0B       		.uleb128 0xb
 401 0046 3B       		.uleb128 0x3b
 402 0047 0B       		.uleb128 0xb
 403 0048 27       		.uleb128 0x27
 404 0049 19       		.uleb128 0x19
 405 004a 11       		.uleb128 0x11
 406 004b 01       		.uleb128 0x1
 407 004c 12       		.uleb128 0x12
 408 004d 06       		.uleb128 0x6
 409 004e 40       		.uleb128 0x40
 410 004f 18       		.uleb128 0x18
 411 0050 9642     		.uleb128 0x2116
 412 0052 19       		.uleb128 0x19
 413 0053 01       		.uleb128 0x1
 414 0054 13       		.uleb128 0x13
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 12


 415 0055 00       		.byte	0
 416 0056 00       		.byte	0
 417 0057 07       		.uleb128 0x7
 418 0058 05       		.uleb128 0x5
 419 0059 00       		.byte	0
 420 005a 03       		.uleb128 0x3
 421 005b 08       		.uleb128 0x8
 422 005c 3A       		.uleb128 0x3a
 423 005d 0B       		.uleb128 0xb
 424 005e 3B       		.uleb128 0x3b
 425 005f 0B       		.uleb128 0xb
 426 0060 49       		.uleb128 0x49
 427 0061 13       		.uleb128 0x13
 428 0062 02       		.uleb128 0x2
 429 0063 18       		.uleb128 0x18
 430 0064 00       		.byte	0
 431 0065 00       		.byte	0
 432 0066 08       		.uleb128 0x8
 433 0067 2E       		.uleb128 0x2e
 434 0068 01       		.byte	0x1
 435 0069 3F       		.uleb128 0x3f
 436 006a 19       		.uleb128 0x19
 437 006b 03       		.uleb128 0x3
 438 006c 0E       		.uleb128 0xe
 439 006d 3A       		.uleb128 0x3a
 440 006e 0B       		.uleb128 0xb
 441 006f 3B       		.uleb128 0x3b
 442 0070 0B       		.uleb128 0xb
 443 0071 49       		.uleb128 0x49
 444 0072 13       		.uleb128 0x13
 445 0073 11       		.uleb128 0x11
 446 0074 01       		.uleb128 0x1
 447 0075 12       		.uleb128 0x12
 448 0076 06       		.uleb128 0x6
 449 0077 40       		.uleb128 0x40
 450 0078 18       		.uleb128 0x18
 451 0079 9642     		.uleb128 0x2116
 452 007b 19       		.uleb128 0x19
 453 007c 01       		.uleb128 0x1
 454 007d 13       		.uleb128 0x13
 455 007e 00       		.byte	0
 456 007f 00       		.byte	0
 457 0080 09       		.uleb128 0x9
 458 0081 34       		.uleb128 0x34
 459 0082 00       		.byte	0
 460 0083 03       		.uleb128 0x3
 461 0084 0E       		.uleb128 0xe
 462 0085 3A       		.uleb128 0x3a
 463 0086 0B       		.uleb128 0xb
 464 0087 3B       		.uleb128 0x3b
 465 0088 0B       		.uleb128 0xb
 466 0089 49       		.uleb128 0x49
 467 008a 13       		.uleb128 0x13
 468 008b 02       		.uleb128 0x2
 469 008c 18       		.uleb128 0x18
 470 008d 00       		.byte	0
 471 008e 00       		.byte	0
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 13


 472 008f 0A       		.uleb128 0xa
 473 0090 01       		.uleb128 0x1
 474 0091 01       		.byte	0x1
 475 0092 49       		.uleb128 0x49
 476 0093 13       		.uleb128 0x13
 477 0094 00       		.byte	0
 478 0095 00       		.byte	0
 479 0096 0B       		.uleb128 0xb
 480 0097 21       		.uleb128 0x21
 481 0098 00       		.byte	0
 482 0099 49       		.uleb128 0x49
 483 009a 13       		.uleb128 0x13
 484 009b 2F       		.uleb128 0x2f
 485 009c 0B       		.uleb128 0xb
 486 009d 00       		.byte	0
 487 009e 00       		.byte	0
 488 009f 00       		.byte	0
 489              		.section	.debug_aranges,"",%progbits
 490 0000 24000000 		.4byte	0x24
 491 0004 0200     		.2byte	0x2
 492 0006 00000000 		.4byte	.Ldebug_info0
 493 000a 04       		.byte	0x4
 494 000b 00       		.byte	0
 495 000c 0000     		.2byte	0
 496 000e 0000     		.2byte	0
 497 0010 00000000 		.4byte	.LFB35
 498 0014 1E000000 		.4byte	.LFE35-.LFB35
 499 0018 00000000 		.4byte	.LFB36
 500 001c A4000000 		.4byte	.LFE36-.LFB36
 501 0020 00000000 		.4byte	0
 502 0024 00000000 		.4byte	0
 503              		.section	.debug_ranges,"",%progbits
 504              	.Ldebug_ranges0:
 505 0000 00000000 		.4byte	.LFB35
 506 0004 1E000000 		.4byte	.LFE35
 507 0008 00000000 		.4byte	.LFB36
 508 000c A4000000 		.4byte	.LFE36
 509 0010 00000000 		.4byte	0
 510 0014 00000000 		.4byte	0
 511              		.section	.debug_line,"",%progbits
 512              	.Ldebug_line0:
 513 0000 A4000000 		.section	.debug_str,"MS",%progbits,1
 513      02004300 
 513      00000201 
 513      FB0E0D00 
 513      01010101 
 514              	.LASF6:
 515 0000 6C6F6E67 		.ascii	"long long int\000"
 515      206C6F6E 
 515      6720696E 
 515      7400
 516              	.LASF9:
 517 000e 75696E74 		.ascii	"uint32\000"
 517      333200
 518              	.LASF15:
 519 0015 70757464 		.ascii	"putdata\000"
 519      61746100 
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 14


 520              	.LASF8:
 521 001d 756E7369 		.ascii	"unsigned int\000"
 521      676E6564 
 521      20696E74 
 521      00
 522              	.LASF1:
 523 002a 756E7369 		.ascii	"unsigned char\000"
 523      676E6564 
 523      20636861 
 523      7200
 524              	.LASF22:
 525 0038 433A5C55 		.ascii	"C:\\Users\\Lonnie\\Desktop\\AN91184\\Health Thermom"
 525      73657273 
 525      5C4C6F6E 
 525      6E69655C 
 525      4465736B 
 526 0066 65746572 		.ascii	"eter.cydsn\000"
 526      2E637964 
 526      736E00
 527              	.LASF18:
 528 0071 74656D70 		.ascii	"temp\000"
 528      00
 529              	.LASF16:
 530 0076 6D61696E 		.ascii	"main\000"
 530      00
 531              	.LASF5:
 532 007b 6C6F6E67 		.ascii	"long unsigned int\000"
 532      20756E73 
 532      69676E65 
 532      6420696E 
 532      7400
 533              	.LASF7:
 534 008d 6C6F6E67 		.ascii	"long long unsigned int\000"
 534      206C6F6E 
 534      6720756E 
 534      7369676E 
 534      65642069 
 535              	.LASF20:
 536 00a4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 536      4320342E 
 536      392E3320 
 536      32303135 
 536      30333033 
 537 00d7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 537      20726576 
 537      6973696F 
 537      6E203232 
 537      31323230 
 538 010a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 538      66756E63 
 538      74696F6E 
 538      2D736563 
 538      74696F6E 
 539              	.LASF17:
 540 0132 74656D70 		.ascii	"temperature\000"
 540      65726174 
 540      75726500 
ARM GAS  C:\Users\Lonnie\AppData\Local\Temp\ccxCcX9b.s 			page 15


 541              	.LASF13:
 542 013e 63686172 		.ascii	"char\000"
 542      00
 543              	.LASF4:
 544 0143 6C6F6E67 		.ascii	"long int\000"
 544      20696E74 
 544      00
 545              	.LASF2:
 546 014c 73686F72 		.ascii	"short int\000"
 546      7420696E 
 546      7400
 547              	.LASF12:
 548 0156 646F7562 		.ascii	"double\000"
 548      6C6500
 549              	.LASF3:
 550 015d 73686F72 		.ascii	"short unsigned int\000"
 550      7420756E 
 550      7369676E 
 550      65642069 
 550      6E7400
 551              	.LASF0:
 552 0170 7369676E 		.ascii	"signed char\000"
 552      65642063 
 552      68617200 
 553              	.LASF11:
 554 017c 666C6F61 		.ascii	"float\000"
 554      7400
 555              	.LASF21:
 556 0182 2E5C6D61 		.ascii	".\\main.c\000"
 556      696E2E63 
 556      00
 557              	.LASF14:
 558 018b 73697A65 		.ascii	"sizetype\000"
 558      74797065 
 558      00
 559              	.LASF19:
 560 0194 4F75745F 		.ascii	"Out_String\000"
 560      53747269 
 560      6E6700
 561              	.LASF10:
 562 019f 696E7433 		.ascii	"int32\000"
 562      3200
 563              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
